# Generated by Django 2.0.3 on 2018-04-08 15:20

import core.models
import django.contrib.postgres.fields.hstore
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    replaces = [('core', '0001_initial'), ('core', '0002_auto_20180404_1412'), ('core', '0003_auto_20180404_1628'), ('core', '0004_auto_20180405_1621'), ('core', '0005_auto_20180405_1622'), ('core', '0006_auto_20180405_1625'), ('core', '0007_auto_20180405_1626'), ('core', '0008_auto_20180405_1626'), ('core', '0009_auto_20180405_1628'), ('core', '0010_auto_20180405_1644'), ('core', '0011_auto_20180405_1716'), ('core', '0012_auto_20180406_1921'), ('core', '0013_auto_20180406_1943'), ('core', '0014_auto_20180406_1951'), ('core', '0015_auto_20180406_1952'), ('core', '0016_auto_20180406_1952'), ('core', '0017_auto_20180406_1955'), ('core', '0018_auto_20180406_1957'), ('core', '0019_auto_20180406_2034'), ('core', '0020_auto_20180406_2117'), ('core', '0021_auto_20180407_1950'), ('core', '0022_auto_20180407_1950'), ('core', '0023_auto_20180407_1951'), ('core', '0024_auto_20180407_2016'), ('core', '0025_auto_20180407_2219'), ('core', '0026_auto_20180407_2224'), ('core', '0027_auto_20180407_2225'), ('core', '0028_experiment_report'), ('core', '0029_auto_20180408_1202'), ('core', '0030_auto_20180408_1312')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='application', max_length=200)),
                ('handle', models.CharField(blank=True, max_length=200)),
                ('version_code', models.IntegerField(blank=True)),
                ('version_name', models.CharField(blank=True, max_length=200)),
                ('icon_phash', models.IntegerField(blank=True, null=True)),
                ('app_uid', models.CharField(blank=True, max_length=200)),
                ('creator', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('brand', models.CharField(max_length=200)),
                ('version', models.CharField(blank=True, max_length=200)),
                ('serial', models.CharField(blank=True, max_length=200)),
                ('label', models.CharField(blank=True, max_length=200)),
                ('website', models.URLField(blank=True)),
                ('raw_parameters', models.TextField(blank=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Application')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('sha256', models.CharField(blank=True, max_length=200)),
                ('size', models.IntegerField(blank=True)),
                ('file', models.FileField(upload_to=core.models.path_and_rename)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Experiment')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='APKFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.File')),
            ],
            bases=('core.file',),
        ),
        migrations.CreateModel(
            name='BluetoothDump',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.File')),
            ],
            bases=('core.file',),
        ),
        migrations.CreateModel(
            name='FlowFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.File')),
            ],
            bases=('core.file',),
        ),
        migrations.CreateModel(
            name='IoTDevice',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Device')),
            ],
            bases=('core.device',),
        ),
        migrations.CreateModel(
            name='PCAPFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.File')),
            ],
            bases=('core.file',),
        ),
        migrations.CreateModel(
            name='Smartphone',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Device')),
            ],
            bases=('core.device',),
        ),
        migrations.AddField(
            model_name='experiment',
            name='iot_device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.IoTDevice'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='smartphone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Smartphone'),
        ),
        migrations.AddField(
            model_name='application',
            name='apk',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.APKFile'),
        ),
        migrations.AddField(
            model_name='application',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='application',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='device',
            name='name',
            field=models.CharField(max_length=200, unique=True),
        ),
        migrations.AlterField(
            model_name='device',
            name='serial',
            field=models.CharField(max_length=200, unique=True),
        ),
        migrations.AlterField(
            model_name='file',
            name='sha256',
            field=models.CharField(blank=True, max_length=200, unique=True),
        ),
        migrations.AlterField(
            model_name='experiment',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Application'),
        ),
        migrations.AlterField(
            model_name='experiment',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Application'),
        ),
        migrations.AlterField(
            model_name='experiment',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Application'),
        ),
        migrations.AddField(
            model_name='session',
            name='bluetooth_dump',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.BluetoothDump'),
        ),
        migrations.AddField(
            model_name='session',
            name='flow_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.FlowFile'),
        ),
        migrations.AddField(
            model_name='session',
            name='pcap_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.PCAPFile'),
        ),
        migrations.CreateModel(
            name='DNSQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hostname', models.CharField(max_length=200)),
                ('ipv4', models.CharField(max_length=200)),
                ('ipv6', models.CharField(max_length=200)),
                ('country', models.CharField(max_length=200)),
                ('count', models.IntegerField(default=0)),
                ('is_tracker', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NetworkAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Session')),
            ],
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='network_analysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.NetworkAnalysis'),
        ),
        migrations.RemoveField(
            model_name='dnsquery',
            name='count',
        ),
        migrations.RemoveField(
            model_name='dnsquery',
            name='country',
        ),
        migrations.RemoveField(
            model_name='dnsquery',
            name='ipv4',
        ),
        migrations.RemoveField(
            model_name='dnsquery',
            name='ipv6',
        ),
        migrations.RemoveField(
            model_name='dnsquery',
            name='is_tracker',
        ),
        migrations.RenameField(
            model_name='dnsquery',
            old_name='hostname',
            new_name='domain',
        ),
        migrations.AlterField(
            model_name='dnsquery',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Domain'),
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='address',
            field=models.CharField(default='', editable=False, max_length=200),
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='city',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='country',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='country_code',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='latitude',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='longitude',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='organization',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AddField(
            model_name='dnsquery',
            name='region',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='dnsquery',
            name='domain',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AlterModelOptions(
            name='dnsquery',
            options={'ordering': ('domain',)},
        ),
        migrations.AddField(
            model_name='experiment',
            name='markers',
            field=django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='experiment',
            name='report',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='application',
            name='markers',
            field=django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='device',
            name='markers',
            field=django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True),
        ),
    ]
